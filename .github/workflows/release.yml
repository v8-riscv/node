on:
  push:
    tags:
      - "v*-riscv64" # Push events to matching v*-riscv64, i.e. v14.8.0-riscv64

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Cache the toolchain
        id: cache-toolchain
        uses: actions/cache@v2
        env:
          cache-name: riscv-toolchain
        with:
          path: /opt/riscv
          key: 10.1.0
      - name: Build the toolchain
        if: steps.cache-toolchain.outputs.cache-hit != 'true'
        run: |
          sudo apt install gawk texinfo zlib1g-dev flex bison
          cd /tmp
          git clone https://github.com/riscv/riscv-gnu-toolchain
          cd riscv-gnu-toolchain
          git submodule update --init --recursive
          ./configure --prefix=/opt/riscv
          sudo make linux -j8
          echo "::add-path::/opt/riscv/bin"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          git submodule update --init --recursive
          make binary DESTCPU=riscv64 CC=riscv64-unknown-linux-gnu-gcc CXX=riscv64-unknown-linux-gnu-g++ CC_host=gcc CXX_host=g++ CONFIG_FLAGS="--openssl-no-asm --build-v8-with-gn --cross-compiling" -j$(nproc)
      - name: Get the version (git tag)
        id: get_version
        run: |
          echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=VERSION::$(python tools/getnodeversion.py)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.TAG }}
          release_name: Release ${{ steps.get_version.outputs.TAG }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./node-v${{ steps.get_version.outputs.VERSION }}-linux-riscv64.tar.xz
          asset_name: node-v${{ steps.get_version.outputs.VERSION }}-linux-riscv64.tar.xz
          asset_content_type: application/x-gtar
